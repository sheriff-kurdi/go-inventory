definitions:
  vm.LoginVM:
    properties:
      password:
        type: string
      user_name:
        type: string
    type: object
  vm.ProductDetailsInsertionVM:
    properties:
      description:
        type: string
      language_code:
        type: string
      name:
        type: string
    type: object
  vm.ProductSavingVM:
    properties:
      available_stock:
        type: integer
      cost_price:
        type: number
      details:
        items:
          $ref: '#/definitions/vm.ProductDetailsInsertionVM'
        type: array
      discount:
        type: number
      id:
        type: integer
      is_discounted:
        type: boolean
      reserved_stock:
        type: integer
      selling_price:
        type: number
      total_stock:
        type: integer
    type: object
  vm.ProductVM:
    properties:
      available_stock:
        type: integer
      createdAt:
        type: string
      deletedAt:
        type: string
      description:
        type: string
      id:
        type: integer
      language_code:
        type: string
      name:
        type: string
      reserved_stock:
        type: integer
      total_stock:
        type: integer
      updatedAt:
        type: string
    type: object
info:
  contact:
    email: sheriff.kurdi@gmail.com
    name: API Support
  description: This is an inventory API Docs.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Inventory API
  version: "1.0"
paths:
  /api/v1/auth/login:
    post:
      consumes:
      - application/json
      description: Login and get token.
      parameters:
      - description: Login View Model
        in: body
        name: lognVM
        required: true
        schema:
          $ref: '#/definitions/vm.LoginVM'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/vm.LoginVM'
            type: array
      summary: Login and get token
      tags:
      - Auth
  /api/v1/products:
    get:
      consumes:
      - application/json
      description: Get all products.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/vm.ProductVM'
            type: array
      security:
      - ApiKeyAuth: []
      summary: get all products
      tags:
      - Products
  /api/v1/products/:
    post:
      consumes:
      - application/json
      description: Create Product.
      parameters:
      - description: Product VM
        in: body
        name: productVM
        required: true
        schema:
          $ref: '#/definitions/vm.ProductSavingVM'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/vm.ProductSavingVM'
      security:
      - ApiKeyAuth: []
      - ApiKeyAuth: []
      summary: Create Product
      tags:
      - Products
  /api/v1/products/{id}:
    get:
      consumes:
      - application/json
      description: Get product.
      parameters:
      - description: Product Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/vm.ProductVM'
      security:
      - ApiKeyAuth: []
      - ApiKeyAuth: []
      summary: get product.
      tags:
      - Products
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
