// Code generated by mockery v2.20.0. DO NOT EDIT.

package mocks

import (
	fiber "github.com/gofiber/fiber/v2"
	mock "github.com/stretchr/testify/mock"
)

// IResource is an autogenerated mock type for the IResource type
type IResource struct {
	mock.Mock
}

// GetData provides a mock function with given fields:
func (_m *IResource) GetData() *fiber.Map {
	ret := _m.Called()

	var r0 *fiber.Map
	if rf, ok := ret.Get(0).(func() *fiber.Map); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*fiber.Map)
		}
	}

	return r0
}

// GetStatus provides a mock function with given fields:
func (_m *IResource) GetStatus() int {
	ret := _m.Called()

	var r0 int
	if rf, ok := ret.Get(0).(func() int); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(int)
	}

	return r0
}

type mockConstructorTestingTNewIResource interface {
	mock.TestingT
	Cleanup(func())
}

// NewIResource creates a new instance of IResource. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewIResource(t mockConstructorTestingTNewIResource) *IResource {
	mock := &IResource{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
